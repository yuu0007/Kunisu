module.exports = {
	extends: 'eslint:recommended',
	env: {
		node: true,
		es6: true
	},
	parserOptions: {
		ecmaVersion: 2020
	},
	globals: {
		BigInt: true
	},
	rules: {
		'accessor-pairs': 'error',
		'array-bracket-spacing': 'error',
		'array-callback-return': 'error',
		'arrow-body-style': 'error',
		'arrow-parens': ['error', 'as-needed'],
		'arrow-spacing': 'error',
		'block-spacing': 'error',
		'brace-style': ['error', '1tbs', { allowSingleLine: true }],
		'callback-return': 'error',
		camelcase: 'warn',
		'capitalized-comments': 'off',
		'comma-dangle': 'error',
		'comma-spacing': 'error',
		'comma-style': 'error',
		complexity: 'warn',
		'computed-property-spacing': 'error',
		'consistent-this': 'error',
		'consistent-return': 'error',
		curly: ['error', 'multi-line', 'consistent'],
		'dot-location': ['error', 'property'],
		'dot-notation': 'error',
		'eol-last': 'error',
		eqeqeq: 'error',
		'for-direction': 'error',
		'func-call-spacing': ['error', 'never'],
		'func-names': 'error',
		'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
		'handle-callback-err': 'error',
		indent: ['error', 'tab', { SwitchCase: 1 }],
		'key-spacing': 'error',
		'keyword-spacing': ['error', {
			overrides: {
				if: { after: true },
				for: { after: true },
				while: { after: true },
				catch: { after: true },
				switch: { after: true }
			}
		}],
		'max-depth': ['error', 5],
		'max-len': ['error', 120, 2],
		'max-nested-callbacks': ['error', { max: 4 }],
		'max-statements-per-line': ['error', { max: 2 }],
		'new-cap': 'error',
		'no-array-constructor': 'error',
		'no-buffer-constructor': 'error',
		'no-catch-shadow': 'error',
		'no-compare-neg-zero': 'error',
		'no-cond-assign': 'error',
		'no-console': 'off',
		'no-delete-var': 'error',
		'no-dupe-args': 'error',
		'no-dupe-keys': 'error',
		'no-duplicate-case': 'error',
		'no-duplicate-imports': 'error',
		'no-empty': 'error',
		'no-empty-character-class': 'error',
		'no-empty-function': 'error',
		'no-ex-assign': 'error',
		'no-extra-boolean-cast': 'error',
		'no-extra-parens': ['error', 'all', { nestedBinaryExpressions: false }],
		'no-extra-semi': 'error',
		'no-floating-decimal': 'error',
		'no-func-assign': 'error',
		'no-implied-eval': 'error',
		'no-inline-comments': 'off',
		'no-invalid-this': 'error',
		'no-irregular-whitespace': ['error', {
			skipStrings: true,
			skipComments: true,
			skipRegExps: true,
			skipTemplates: true
		}],
		'no-label-var': 'error',
		'no-lone-blocks': 'error',
		'no-lonely-if': 'error',
		'no-mixed-operators': 'error',
		'no-mixed-requires': 'error',
		'no-multiple-empty-lines': ['error', { max: 2, maxEOF: 1, maxBOF: 0 }],
		'no-multi-spaces': 'error',
		'no-negated-condition': 'error',
		'no-new': 'error',
		'no-new-func': 'error',
		'no-new-object': 'error',
		'no-new-require': 'error',
		'no-new-wrappers': 'error',
		'no-octal-escape': 'error',
		'no-path-concat': 'error',
		'no-process-env': 'off',
		'no-return-assign': 'error',
		'no-return-await': 'error',
		'no-self-compare': 'error',
		'no-sequences': 'error',
		'no-shadow': 'error',
		'no-template-curly-in-string': 'error',
		'no-this-before-super': 'error',
		'no-throw-literal': 'error',
		'no-trailing-spaces': 'error',
		'no-undef-init': 'error',
		'no-unmodified-loop-condition': 'error',
		'no-unneeded-ternary': 'error',
		'no-unsafe-negation': 'error',
		'no-unused-expressions': 'error',
		'no-useless-call': 'error',
		'no-useless-computed-key': 'error',
		'no-useless-concat': 'error',
		'no-useless-constructor': 'error',
		'no-useless-escape': 'error',
		'no-useless-return': 'error',
		'no-void': 'error',
		'no-warning-comments': 'warn',
		'no-whitespace-before-property': 'error',
		'no-with': 'error',
		'nonblock-statement-body-position': 'error',
		'object-curly-newline': ['error', { multiline: true, consistent: true }],
		'object-curly-spacing': ['error', 'always'],
		'object-shorthand': ['error', 'always'],
		'one-var': ['error', 'never'],
		'operator-assignment': ['error', 'always'],
		'operator-linebreak': ['error', 'before'],
		'padded-blocks': ['error', 'never'],
		'prefer-arrow-callback': 'error',
		'prefer-const': 'error',
		'prefer-destructuring': ['error', {
			VariableDeclarator: {
				array: false,
				object: true
			},
			AssignmentExpression: {
				array: false,
				object: false
			}
		}],
		'prefer-promise-reject-errors': 'error',
		'prefer-rest-params': 'error',
		'prefer-spread': 'error',
		'prefer-template': 'error',
		'quote-props': ['error', 'as-needed'],
		quotes: ['error', 'single', { allowTemplateLiterals: true }],
		'require-atomic-updates': 'off',
		'rest-spread-spacing': 'error',
		semi: 'error',
		'semi-spacing': 'error',
		'semi-style': ['error', 'last'],
		'space-before-blocks': 'error',
		'space-before-function-paren': ['error', {
			anonymous: 'never',
			named: 'never',
			asyncArrow: 'always'
		}],
		'space-in-parens': 'error',
		'space-infix-ops': 'error',
		'space-unary-ops': 'error',
		'spaced-comment': 'error',
		'switch-colon-spacing': ['error', { after: true, before: false }],
		radix: 'error',
		'require-await': 'error',
		strict: ['error', 'never'],
		'template-curly-spacing': 'error',
		'template-tag-spacing': 'error',
		'unicode-bom': 'error',
		'use-isnan': 'error',
		'wrap-iife': 'error',
		'yield-star-spacing': 'error',
		yoda: 'error'
	}
};
